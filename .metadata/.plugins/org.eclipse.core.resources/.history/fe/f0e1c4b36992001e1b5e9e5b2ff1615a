package cdac.in;

import java.util.LinkedList;
import java.util.Queue;

public class BinaryTreeLinkedList {
    BinaryNode root;

    public BinaryTreeLinkedList() {
        this.root = null;
    }

    // inOrder Traversal
    public void inOrder(BinaryNode node) {
        if (node == null) {
            return;
        }
        inOrder(node.left);
        System.out.print(node.value + "   ");
        inOrder(node.right);
    }

    // !
    public void preOrder(BinaryNode node) {
        if (node == null) {
            return;
        }
        // Process the current node (print its value)
        System.out.print(node.value + "   ");
        // Traverse the left subtree
        preOrder(node.left);
        // Traverse the right subtree
        preOrder(node.right);
    }

    // Post-order Traversal
    public void postOrder(BinaryNode node) {
        if (node == null) {
            return;
        }
        // Traverse the left subtree
        postOrder(node.left);
        // Traverse the right subtree
        postOrder(node.right);
        // Process the current node (print its value)
        System.out.print(node.value + "   ");
    }

}